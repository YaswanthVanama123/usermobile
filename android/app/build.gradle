apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'

react {
    // Default configurations (uncomment and customize if needed)
}

project.ext.react = [
    enableHermes: true  // Enable Hermes
]

def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion
    lintOptions {
            disable 'MissingPermission'
        }
    namespace "com.userapp1"
    defaultConfig {
        applicationId "com.userapp1"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation(platform("com.google.firebase:firebase-bom:33.1.2"))
    // implementation project(':react-native-splash-screen')
    // implementation project(':react-native-splash-screen')
    implementation("com.google.firebase:firebase-auth")
    implementation 'com.google.firebase:firebase-auth:20.3.0'
    implementation 'com.google.firebase:firebase-messaging:20.3.0'
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); 
applyNativeModulesAppBuildGradle(project)

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")

configurations.all {
    exclude group: 'com.google.android.gms', module: 'play-services-safetynet'
}

// Explicitly declare the dependencies to ensure correct task order
tasks.whenTaskAdded { task ->
    if (task.name == 'generateDebugLintReportModel' || task.name == 'lintAnalyzeDebug') {
        task.dependsOn('copyReactNativeVectorIconFonts')
    }
}
